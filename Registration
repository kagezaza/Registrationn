<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Registration Form</title>
  <style>
    /* Reset & base */
    * {
      box-sizing: border-box;
    }
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f0f4f8;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
      padding: 40px 20px;
    }
    .container {
      background: #fff;
      padding: 30px 40px;
      border-radius: 10px;
      box-shadow: 0 8px 20px rgba(0,0,0,0.1);
      max-width: 450px;
      width: 100%;
    }
    h2 {
      text-align: center;
      color: #333;
      margin-bottom: 25px;
    }
    form {
      display: flex;
      flex-direction: column;
    }
    label {
      margin-bottom: 6px;
      font-weight: 600;
      color: #555;
    }
    input[type="text"],
    input[type="email"],
    input[type="password"],
    input[type="number"],
    input[type="date"],
    select {
      padding: 10px 12px;
      margin-bottom: 18px;
      border: 1.8px solid #ccc;
      border-radius: 6px;
      font-size: 16px;
      transition: border-color 0.3s ease;
    }
    input[type="text"]:focus,
    input[type="email"]:focus,
    input[type="password"]:focus,
    input[type="number"]:focus,
    input[type="date"]:focus,
    select:focus {
      border-color: #007BFF;
      outline: none;
    }
    .gender-group {
      margin-bottom: 18px;
    }
    .gender-group label {
      font-weight: normal;
      margin-right: 15px;
      color: #444;
    }
    .terms {
      display: flex;
      align-items: center;
      margin-bottom: 20px;
    }
    .terms input[type="checkbox"] {
      margin-right: 10px;
      transform: scale(1.2);
      cursor: pointer;
    }
    .terms label {
      font-size: 14px;
      color: #555;
      cursor: pointer;
    }
    button {
      padding: 12px;
      background-color: #007BFF;
      border: none;
      border-radius: 7px;
      color: white;
      font-size: 18px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    button:hover {
      background-color: #0056b3;
    }
    .error {
      color: #d93025;
      font-size: 13px;
      margin-top: -14px;
      margin-bottom: 12px;
    }
    /* Display user data */
    #userData {
      margin-top: 30px;
      background: #e9f0ff;
      padding: 20px 25px;
      border-radius: 10px;
      box-shadow: inset 0 0 10px rgba(0,123,255,0.1);
      color: #003366;
    }
    #userData h3 {
      margin-top: 0;
      margin-bottom: 15px;
      text-align: center;
      color: #007BFF;
    }
    #userData p {
      margin: 6px 0;
      font-size: 16px;
    }
    #userData p span {
      font-weight: 600;
      color: #0056b3;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Registration Form</h2>
    <form id="registrationForm" novalidate>
      <label for="fullName">Full Name *</label>
      <input type="text" id="fullName" name="fullName" placeholder="Enter your full name" required />
      <div class="error" id="fullNameError"></div>

      <label for="email">Email *</label>
      <input type="email" id="email" name="email" placeholder="example@mail.com" required />
      <div class="error" id="emailError"></div>

      <label for="password">Password *</label>
      <input type="password" id="password" name="password" placeholder="Enter a password" required minlength="6" />
      <div class="error" id="passwordError"></div>

      <label for="phone">Phone Number *</label>
      <input type="number" id="phone" name="phone" placeholder="e.g. 1234567890" required />
      <div class="error" id="phoneError"></div>

      <label>Gender *</label>
      <div class="gender-group">
        <label><input type="radio" name="gender" value="Male" required /> Male</label>
        <label><input type="radio" name="gender" value="Female" /> Female</label>
        <label><input type="radio" name="gender" value="Other" /> Other</label>
      </div>
      <div class="error" id="genderError"></div>

      <label for="dob">Date of Birth *</label>
      <input type="date" id="dob" name="dob" required />
      <div class="error" id="dobError"></div>

      <label for="course">Course/Program *</label>
      <select id="course" name="course" required>
        <option value="" disabled selected>Select a course</option>
        <option value="Computer Science">Computer Science</option>
        <option value="Business Administration">Business Administration</option>
        <option value="Mechanical Engineering">Mechanical Engineering</option>
        <option value="Psychology">Psychology</option>
        <option value="Medicine">Medicine</option>
      </select>
      <div class="error" id="courseError"></div>

      <div class="terms">
        <input type="checkbox" id="terms" name="terms" required />
        <label for="terms">I accept the <a href="#" target="_blank">Terms and Conditions</a> *</label>
      </div>
      <div class="error" id="termsError"></div>

      <button type="submit">Register</button>
    </form>

    <div id="userData" style="display:none;">
      <h3>Registration Details</h3>
      <p><span>Full Name:</span> <span id="displayFullName"></span></p>
      <p><span>Email:</span> <span id="displayEmail"></span></p>
      <p><span>Password:</span> <span id="displayPassword"></span></p>
      <p><span>Phone Number:</span> <span id="displayPhone"></span></p>
      <p><span>Gender:</span> <span id="displayGender"></span></p>
      <p><span>Date of Birth:</span> <span id="displayDOB"></span></p>
      <p><span>Course/Program:</span> <span id="displayCourse"></span></p>
      <p><span>Accepted Terms:</span> <span id="displayTerms"></span></p>
    </div>
  </div>

  <script>
    const form = document.getElementById('registrationForm');

    function showError(id, message) {
      document.getElementById(id).textContent = message;
    }

    function clearErrors() {
      const errors = document.querySelectorAll('.error');
      errors.forEach(error => (error.textContent = ''));
    }

    function formatDate(dateStr) {
      const options = { year: 'numeric', month: 'long', day: 'numeric' };
      return new Date(dateStr).toLocaleDateString(undefined, options);
    }

    form.addEventListener('submit', function(e) {
      e.preventDefault();
      clearErrors();

      const fullName = form.fullName.value.trim();
      const email = form.email.value.trim();
      const password = form.password.value;
      const phone = form.phone.value.trim();
      const gender = form.gender.value;
      const dob = form.dob.value;
      const course = form.course.value;
      const terms = form.terms.checked;

      let valid = true;

      if (fullName === '') {
        showError('fullNameError', 'Full Name is required.');
        valid = false;
      }

      if (email === '') {
        showError('emailError', 'Email is required.');
        valid = false;
      } else if (!validateEmail(email)) {
        showError('emailError', 'Please enter a valid email address.');
        valid = false;
      }

      if (password === '') {
        showError('passwordError', 'Password is required.');
        valid = false;
      } else if (password.length < 6) {
        showError('passwordError', 'Password must be at least 6 characters.');
        valid = false;
      }

      if (phone === '') {
        showError('phoneError', 'Phone Number is required.');
        valid = false;
      } else if (!/^\d{7,15}$/.test(phone)) {
        showError('phoneError', 'Enter a valid phone number (7-15 digits).');
        valid = false;
      }

      if (!gender) {
        showError('genderError', 'Please select your gender.');
        valid = false;
      }

      if (dob === '') {
        showError('dobError', 'Date of Birth is required.');
        valid = false;
      } else if (!validateDOB(dob)) {
        showError('dobError', 'You must be at least 13 years old.');
        valid = false;
      }

      if (!course) {
        showError('courseError', 'Please select a course/program.');
        valid = false;
      }

      if (!terms) {
        showError('termsError', 'You must accept the terms and conditions.');
        valid = false;
      }

      if (!valid) return;

      alert('Registration Successfully');


      document.getElementById('displayFullName').textContent = fullName;
      document.getElementById('displayEmail').textContent = email;
      document.getElementById('displayPassword').textContent = '*'.repeat(password.length);
      document.getElementById('displayPhone').textContent = phone;
      document.getElementById('displayGender').textContent = gender;
      document.getElementById('displayDOB').textContent = formatDate(dob);
      document.getElementById('displayCourse').textContent = course;
      document.getElementById('displayTerms').textContent = terms ? 'Yes' : 'No';

      document.getElementById('userData').style.display = 'block';

      form.reset();
    });

    function validateEmail(email) {
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return re.test(email.toLowerCase());
    }

    function validateDOB(dob) {
      const dobDate = new Date(dob);
      const today = new Date();
      let age = today.getFullYear() - dobDate.getFullYear();
      const m = today.getMonth() - dobDate.getMonth();
      if (m < 0 || (m === 0 && today.getDate() < dobDate.getDate())) {
        age--;
      }
      return age >= 13;
    }
  </script>
</body>
</html>
